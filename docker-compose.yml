version: "3.9"

services:
  # MySQL Database Service
  mysql-db:
    image: mysql:8.0
    container_name: mysql-student-db
    restart: always
    ports:
      - "3310:3306"
    environment:
      MYSQL_DATABASE: student_db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: student_user
      MYSQL_PASSWORD: student_pass
    volumes:
      - mysql-student-data:/var/lib/mysql
    networks:
      - student-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -ppassword || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Spring Boot Student Service
  student-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: student-app-service
    restart: always
    ports:
      - "8090:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/student_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MySQLDialect
      SPRING_APPLICATION_NAME: student-service
      SERVER_PORT: 8080
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - student-network

  # SonarQube Service
  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    restart: always
    networks:
      - student-network

volumes:
  mysql-student-data:

networks:
  student-network:
    driver: bridge
